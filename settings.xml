<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="a3e15e8b-dd92-4f09-b632-9b62f8144072" created="2.6.0" activeEnvironment="Default environment" name="Calculator_SOAP" resourceRoot="" updated="2.6.0" encryptionMode="Not encrypted" compositeProjectFormat="1.3" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:requirements><con:requirement><con:id>Verify HTML Methods</con:id><con:description>Create all different html methods on the given apis</con:description><con:status>In Scope</con:status><con:links/><con:testCases><con:entry>d735255d-bfe0-41be-af10-14fc2308c3fb</con:entry></con:testCases></con:requirement></con:requirements><con:properties/><con:wssContainer/><con:databaseConnectionContainer><con:databaseConnection><con:name>mysql</con:name><con:driver>com.mysql.jdbc.Driver</con:driver><con:connectionString>jdbc:mysql://localhost:3306/testing?user=root&amp;password=PASS_VALUE</con:connectionString><con:password>root</con:password><con:connectionProperties/></con:databaseConnection></con:databaseConnectionContainer><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository/><con:tags><con:tag><con:id>822eba9e-15ab-4b44-be49-a95761572c58</con:id><con:name>smoke_test</con:name></con:tag><con:tag><con:id>a371633a-0fe4-4595-aa57-95cbfbef5533</con:id><con:name>regression</con:name></con:tag></con:tags></con:soapui-project>